<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>no.freecode.trumpeter</groupId>
    <artifactId>trumpeter</artifactId>
    <packaging>jar</packaging>
    <name>Trumpeter</name>
    <version>0.3.0</version>
    <description>Trumpeter is a stand-alone server that integrates RT (Request Tracker) with an XMPP chat server (used by Jabber, Pidgin, Google Talk, etc.). It regularly queries RT, and posts notification messages in chat rooms based on a configurable set of rules.</description>
    <url>https://projects.freecode.no/projects/show/trumpeter</url>

    <organization>
        <name>FreeCode AS</name>
        <url>http://www.freecode.no/</url>
    </organization>

    <issueManagement>
        <system>Redmine</system>
        <url>https://projects.freecode.no/</url>
    </issueManagement>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <profiles>
        <profile>
            <id>dev</id>
            <build>
                <resources>
                    <resource>
                        <!--
                            If the maven user chooses to use the 'dev' profile, the following folder will also become
                            part of the class path. I use this to keep my own developer configuration files
                            (config.properties and agents.xml) outside version control.
                        -->
                        <directory>${user.home}/secret/trumpeter_etc</directory>
                    </resource>
                </resources>
            </build>

            <dependencies>
                <dependency>
                    <groupId>org.igniterealtime</groupId>
                    <artifactId>smackx-debug</artifactId>
                    <version>3.1.0</version>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.2-beta-3</version>
                <executions>
                    <execution>
                        <id>create-executable-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>distribution/distribution.xml</descriptor>
                            </descriptors>
                            <archive>
                                <manifest>
                                    <mainClass>no.freecode.trumpeter.App</mainClass>
<!--                                    <addClasspath>true</addClasspath>-->
<!--                                    <classpathPrefix>lib/</classpathPrefix>-->
                                </manifest>
                            </archive>
                            

                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Create a souce file package as well. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>1.6</source>
                        <target>1.6</target>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.14</version>
        </dependency>

        <!-- Smack libraries for communicating via XMPP. -->
        <dependency>
            <groupId>org.igniterealtime</groupId>
            <artifactId>smack</artifactId>
            <version>3.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.igniterealtime</groupId>
            <artifactId>smackx</artifactId>
            <version>3.1.0</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring</artifactId>
            <version>2.5.6</version>
        </dependency>

        <!-- HTTP client, used to read data from RT. -->
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>3.1</version>
        </dependency>

        <!-- Useful utilities for e.g. string parsing. -->
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.4</version>
        </dependency>

        <!-- Use Quartz for scheduling events. -->
        <dependency>
            <groupId>opensymphony</groupId>
            <artifactId>quartz</artifactId>
            <version>1.5.2</version>
        </dependency>

        <!-- JCS - Java Caching System. -->
        <dependency>
            <groupId>org.apache.jcs</groupId>
            <artifactId>jcs</artifactId>
            <version>1.3</version>
<!--            <version>1.3.3.5-RC</version>-->
        </dependency>

        <!-- Command line arguments parsing. -->
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>1.2</version>
        </dependency>

        <!-- Use the akuma library for daemonization. (https://akuma.dev.java.net/) -->
        <dependency>
            <groupId>com.sun.akuma</groupId>
            <artifactId>akuma</artifactId>
            <version>1.2</version>
        </dependency>
    </dependencies>

    <!-- Generating site reports. -->
    <reporting>
        <plugins>
            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <configuration>
                    <inputEncoding>UTF-8</inputEncoding>
                    <outputEncoding>UTF-8</outputEncoding>
                    <encoding>UTF-8</encoding>
                    <charset>UTF-8</charset>
                </configuration>
            </plugin>

            <!-- Add javadocs to the site. -->
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <docencoding>UTF-8</docencoding>
                    <encoding>UTF-8</encoding>
                    <charset>UTF-8</charset>
                </configuration>
            </plugin>

            <!-- HTML-version of the code. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jxr-maven-plugin</artifactId>
                <configuration>
                    <outputEncoding>UTF-8</outputEncoding>
                </configuration>
            </plugin>

            <!-- Test reports -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>

            <!-- Test coverage report. -->
            <plugin>
                <artifactId>maven-clover-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
            </plugin>

            <!-- Display tags like TODO, etc... -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>taglist-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </reporting>

    <repositories>
        <!--
            Since we have dependencies that aren't in the standard Maven repository, we'll use a project folder as a
            repository as well.
        -->
        <repository>
            <id>ProjectRepo</id>
            <name>Project repository</name>
            <url>file:///${basedir}/maven2</url>
        </repository>

        <repository>
            <id>maven2-repository.dev.java.net</id>
            <name>Java.net Repository for Maven</name>
            <url>http://download.java.net/maven/2/</url>
            <layout>default</layout>
        </repository>
    </repositories>
</project>
